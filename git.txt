#include <Wire.h>
#include <SPI.h>
#include <MFRC522.h>
#include <ESP8266WiFi.h>
#include "ThingSpeak.h"
const char* ssid = "HUSSAIN'S";
const char* password = "9866275261";
WiFiClient client;
unsigned long myChannel Number = 1;
const char * myWriteAPIKey = "VRG1U2U0215Q518P";
int card1[4]{170,215,73,25};
int card2[4]{138,193,166,128};
constexpr uint8_t RST_PIN = 27; // Configurable, see typical pin layout above
constexpr uint8_t SS_PIN = 15; // Configurable, see typical pin layout above
unsigned long last Time = 0;
unsigned long timerDelay = 30000;
MFRC522 rfid(SS_PIN, RST_PIN); // Instance of the class
MFRC522::MIFARE_Key key;
// Init array that will store new NUID
byte nuidPICC[4];
void setup() {
// put your setup code here, to run once:
Serial.begin(9600);
WiFi.mode(WIFI_STA);
ThingSpeak.begin(client); // Initialize ThingSpeak
SPI.begin(); //Init SPI bus
rfid.PCD_Init(); // Init MFRC522
// Store NUID into nuidPICC array
for (byte i = 0; i < 4; i++) {
nuidPICC[i] = rfid.uid.uidByte[i];
Serial.println(nuidPICC[i]);
}
ThingSpeak.setField(1,30);
ThingSpeak.setField(2,40);
ThingSpeak.setField(3, 50);
delay(200);
==
nuid PICC[0] &&card1[1] == nuidPICC[1] && card1[2]: nuidPICC[2] && card1[3] ==
==
if(card1[0]
nuidPICC[3])
{
int x = ThingSpeak.write Fields(myChannel Number, myWriteAPIKey);
else if(card2[0]
==
nuid PICC[0] &&card2[1] == nuidPICC[1] && card2 [2] == nuidPICC[2] && card2[3]
==
nuidPICC[3])
{
int y = ThingSpeak.write Fields(myChannel Number, myWriteAPIKey);
for (byte i = 0; i < 6; i++) {
key.keyByte[i] = 0xFF;
}
Serial.println(F("This code scan the MIFARE Classsic NUID."));
Serial.print(F("Using the following key:"));
//printHex(key.keyByte, MFRC522::MF_KEY_SIZE);
}
void loop() {
if ((millis() - lastTime) > timerDelay) {
// Connect or reconnect to WiFi
if(WiFi.status() != WL_CONNECTED){
Serial.print("Attempting to connect");
while(WiFi.status() != WL_CONNECTED){
WiFi.begin(ssid, password);
delay(5000);
}
Serial.println("\nConnected.");
}
if ( ! rfid.PICC_IsNewCard Present())
return;
// Verify if the NUID has been readed
if(!rfid.PICC_ReadCardSerial())
return;
Serial.print(F("PICC type: "));
MFRC522::PICC_Type piccType = rfid.PICC_GetType(rfid.uid.sak);
Serial.println(rfid.PICC_GetTypeName(piccType))